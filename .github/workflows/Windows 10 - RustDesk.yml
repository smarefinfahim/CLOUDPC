name: Windows RDP with ngrok

on: [push]

jobs:
  setup-windows:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Download ngrok
      run: Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Unzip ngrok
      run: Expand-Archive ngrok.zip -DestinationPath $Env:USERPROFILE\ngrok

    - name: Add ngrok to PATH
      run: |
        $env:PATH += ";$Env:USERPROFILE\ngrok"
        [Environment]::SetEnvironmentVariable("PATH", $env:PATH, [EnvironmentVariableTarget]::Process)

    - name: Enable RDP
      run: |
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Start ngrok
      run: |
        .\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        .\ngrok\ngrok.exe tcp 3389 --log=stdout > ngrok.log &
      shell: pwsh

    - name: Get ngrok public URL
      id: ngrok-url
      run: |
        Start-Sleep -Seconds 10
        $ngrok_url = (Invoke-WebRequest -Uri http://127.0.0.1:4040/api/tunnels | ConvertFrom-Json).tunnels[0].public_url
        Write-Output "::set-output name=NGROK_PUBLIC_URL::$ngrok_url"
      shell: pwsh

    - name: Output ngrok public URL
      run: echo "RDP URL: ${{ steps.ngrok-url.outputs.NGROK_PUBLIC_URL }}"
runs-on: windows-latest
- name: Download ngrok
  run: Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip

- name: Unzip ngrok
  run: Expand-Archive ngrok.zip -DestinationPath $Env:USERPROFILE\ngrok

- name: Add ngrok to PATH
  run: |
    $env:PATH += ";$Env:USERPROFILE\ngrok"
    [Environment]::SetEnvironmentVariable("PATH", $env:PATH, [EnvironmentVariableTarget]::Process)
- name: Enable RDP
  run: |
    Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -name "fDenyTSConnections" -Value 0
    Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
- name: Start ngrok
  run: |
    .\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
    .\ngrok\ngrok.exe tcp 3389 --log=stdout > ngrok.log &
  shell: pwsh

- name: Get ngrok public URL
  id: ngrok-url
  run: |
    Start-Sleep -Seconds 10
    $ngrok_url = (Invoke-WebRequest -Uri http://127.0.0.1:4040/api/tunnels | ConvertFrom-Json).tunnels[0].public_url
    Write-Output "::set-output name=NGROK_PUBLIC_URL::$ngrok_url"
  shell: pwsh

- name: Output ngrok public URL
  run: echo "RDP URL: ${{ steps.ngrok-url.outputs.NGROK_PUBLIC_URL }}"
